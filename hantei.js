/**
 * ===================================================
 * hantei.js - 判定ロジックモジュール
 * ===================================================
 */

/**
 * 令第21条 自動火災報知設備の設置義務を判定するメイン関数
 * @param {object} 建物情報 - ユーザー入力から生成された建物情報オブジェクト
 * @returns {object} 判定結果オブジェクト
 */
function 判定実行_令21(建物情報) {
    // --- 初期化 ---
    const 判定結果 = {
        全体義務: null,
        部分義務リスト: [],
        根拠リスト: [],
        重複排除用セット: new Set(),
        is設置範囲限定フラグ: false
    };

    // --- ヘルパー関数: 部分義務の重複を避けて追加 ---
    function 追加部分義務(号, 対象) {
        const key = `${号}-${対象}`;
        if (!判定結果.重複排除用セット.has(key)) {
            判定結果.部分義務リスト.push({ 号: 号, 対象: 対象 });
            判定結果.重複排除用セット.add(key);
        }
    }

    // === STEP 1: みなし規定の適用 (16項の場合のみ) ===
    if (建物情報.主用途 === "(16)項イ" || 建物情報.主用途 === "(16)項ロ") {
        for (const item of 建物情報.複合用途リスト) {
            let 判定号 = null;
            if (["(2)項ハ", "(5)項イ", "(6)項イ", "(6)項ロ", "(13)項ロ", "(17)項"].includes(item.用途) ||
               (item.用途 === "(6)項ハ" && item.入居宿泊フラグ === true)) {
                判定号 = "1号";
            }
            else if (item.用途 === "(9)項イ" && item.面積 >= 200) {
                判定号 = "2号";
            }
            else if (["(5)項ロ", "(7)項", "(8)項", "(9)項ロ", "(10)項", "(12)項イ", "(13)項イ", "(14)項"].includes(item.用途) && item.面積 >= 500) {
                判定号 = "4号";
            }
            else if (["(11)項", "(15)項"].includes(item.用途) && item.面積 >= 1000) {
                判定号 = "6号";
            }
            if (判定号) 追加部分義務(判定号, `${item.用途} 部分`);
        }
    }

    // === STEP 2: 建物全体での判定 ===
    let is全体義務確定 = false;
    let startNum = (建物情報.主用途.startsWith("(16)")) ? 3 : 1;

    if (startNum === 1) { // 単一用途の場合のみ
        const 用途 = 建物情報.主用途;
        const 延べ面積 = 建物情報.延べ面積;
        const 宿泊 = (建物情報.複合用途リスト.length > 0) ? 建物情報.複合用途リスト[0].入居宿泊フラグ : null;
        const 特定用途合計面積 = 建物情報.特定用途合計面積 || 0;

        if (["(2)項ハ", "(5)項イ", "(6)項イ", "(6)項ロ", "(13)項ロ", "(17)項"].includes(用途) || (用途 === "(6)項ハ" && 宿泊 === true)) {
            判定結果.全体義務 = "1号"; is全体義務確定 = true;
        }
        else if (用途 === "(9)項イ" && 延べ面積 >= 200) {
            判定結果.全体義務 = "2号"; is全体義務確定 = true;
        }
        else if (["(5)項ロ", "(7)項", "(8)項", "(9)項ロ", "(10)項", "(12)項イ", "(13)項イ", "(14)項"].includes(用途) && 延べ面積 >= 500) {
            判定結果.全体義務 = "4号"; is全体義務確定 = true;
        }
        else if (用途 === "(16の三)項" && 延べ面積 >= 500 && 特定用途合計面積 >= 300) {
            判定結果.全体義務 = "5号"; is全体義務確定 = true;
        }
        else if (["(11)項", "(15)項"].includes(用途) && 延べ面積 >= 1000) {
            判定結果.全体義務 = "6号"; is全体義務確定 = true;
        }
    }

    // 3号 (常に全体で判定)
    if (!is全体義務確定) {
        const 用途 = 建物情報.主用途;
        const 宿泊 = (用途 === "(6)項ハ" && 建物情報.複合用途リスト.length > 0) ? 建物情報.複合用途リスト[0].入居宿泊フラグ : false;
        console.log('3号判定: 用途=', 用途, '延べ面積=', 建物情報.延べ面積, 'is小規模特複フラグ=', 建物情報.is小規模特複フラグ);
        
        if ((["(1)項イ", "(1)項ロ", "(2)項イ", "(2)項ロ", "(3)項イ", "(3)項ロ", "(4)項", "(16)項イ", "(16の2)項", "(16の3)項"].includes(用途) ||
            (用途 === "(6)項ハ" && 宿泊 === false)) && 建物情報.延べ面積 >= 300) {
            判定結果.全体義務 = "3号"; is全体義務確定 = true;
            console.log('3号に該当しました');
            
            // (16)項イで小規模特複フラグがONの場合、設置範囲限定の特例を適用
            if (用途 === "(16)項イ" && 建物情報.is小規模特複フラグ === true) {
                判定結果.is設置範囲限定フラグ = true;
                console.log('設置範囲限定フラグをONに設定しました');
            } else {
                console.log('設置範囲限定の条件に該当しません: 用途=' + 用途 + ', is小規模特複フラグ=' + 建物情報.is小規模特複フラグ);
            }
        }
    }

    // 7号 (常に全体で判定)
    if (!is全体義務確定 && 建物情報.特定一階段フラグ === true) {
        判定結果.全体義務 = "7号"; is全体義務確定 = true;
    }

    // 8号 (常に全体で判定)
    if (!is全体義務確定 && 建物情報.指定可燃物倍数 >= 500) {
        判定結果.全体義務 = "8号"; is全体義務確定 = true;
    }

    // === STEP 3: 部分的な義務の判定 ===
    if (建物情報.主用途 === "(16の二)項") {
        for (const item of 建物情報.複合用途リスト) {
            if (["(2)項ハ", "(5)項イ", "(6)項イ", "(6)項ロ"].includes(item.用途) || (item.用途 === "(6)項ハ" && item.入居宿泊フラグ === true)) {
                追加部分義務("9号", `${item.用途} 部分`);
            }
        }
    }

    // 階情報が入力されている場合のみ10～15号の判定を実行
    let 階別判定実行フラグ = 建物情報.階情報リスト && 建物情報.階情報リスト.length > 0;
    
    if (階別判定実行フラグ) {
        for (const 階 of 建物情報.階情報リスト) {
        // 10号 (常に部分的判定)
        if (階.is地階 || 階.is無窓階) {
            // (2)項イ～ハ、(3)項イ・ロ、(16)項イが対象
            const 対象用途_10号 = ["(2)項イ", "(2)項ロ", "(2)項ハ", "(3)項イ", "(3)項ロ", "(16)項イ"];
            
            if (対象用途_10号.includes(階.用途)) {
                // (16)項イの場合は特定用途部分の面積、それ以外は床面積
                const 判定面積 = (階.用途 === "(16)項イ") ? (階.特定用途部分の面積 || 0) : 階.床面積;
                
                if (判定面積 >= 100) {
                    追加部分義務("10号", `${階.階名} の特定用途部分`);
                }
            }
        }
        // 11号 (単一用途のみ判定。16項はみなし適用で判定済みのため)
        if (!建物情報.主用途.startsWith("(16)")) {
            if ((階.is地階 || 階.is無窓階 || 階.階数 >= 3) && 階.床面積 >= 300) {
                追加部分義務("11号", `${階.階名}`);
            }
        }
        // 12号 (道路)
        if(階.用途 === "道路"){
            if(階.is屋上 && 階.床面積 >= 600) 追加部分義務("12号", `屋上道路部分`);
            if(!階.is屋上 && 階.床面積 >= 400) 追加部分義務("12号", `${階.階名} 道路部分`);
        }
        // 13号 (駐車場)
        if(階.用途 === "駐車場" && (階.is地階 || 階.階数 >= 2) && 階.床面積 >= 200 && !階.is同時退出可能){
            追加部分義務("13号", `${階.階名} 駐車場`);
        }
        // 14号 (常に全体で判定)
        if (階.階数 >= 11) {
            追加部分義務("14号", `${階.階名}`);
        }
        // 15号 (通信機器室)
        if(階.用途 === "通信機器室" && 階.床面積 >= 500){
            追加部分義務("15号", `${階.階名} 通信機器室`);
        }
        }
    }

    // 階別判定が未実行の場合、判定結果に情報を追加
    if (!階別判定実行フラグ) {
        判定結果.階別判定未実行 = true;
        判定結果.未判定号リスト = ["10号", "11号", "12号", "13号", "15号"];
    }

    // --- 最終整形 ---
    if (判定結果.全体義務) {
        判定結果.根拠リスト.push(判定結果.全体義務);
    }
    for (const p of 判定結果.部分義務リスト) {
        if (!判定結果.根拠リスト.includes(p.号)) {
            判定結果.根拠リスト.push(p.号);
        }
    }
    判定結果.根拠リスト.sort((a, b) => parseInt(a) - parseInt(b)); // 号数順にソート

    // 不要なプロパティを削除
    delete 判定結果.重複排除用セット;
    return 判定結果;
}


/**
 * 特定小規模施設用自動火災報知設備の設置可否を判定するメイン関数
 * @param {object} 判定結果_令21 - 判定実行_令21の実行結果
 * @param {object} 建物情報 - ユーザー入力から生成された建物情報オブジェクト
 * @returns {object} 判定結果オブジェクト
 */
function 特小判定実行(判定結果_令21, 建物情報) {
    // --- STEP 0: 前提条件のチェック ---
    if (判定結果_令21.根拠リスト.length === 0) {
        return { 設置可否: "判定対象外", 根拠: "自火報の設置義務がありません", 該当号: null };
    }

    let 設置可能フラグ = false;
    let 判定根拠号 = null;
    let 否決理由 = "";

    // === イ号の判定 ===
    const 除外号リスト_イ = ["3号", "4号", "5号", "6号", "8号", "11号", "12号", "14号", "15号"];
    const 根拠号が対象か_イ = 判定結果_令21.根拠リスト.every(号 => !除外号リスト_イ.includes(号));

    if (!根拠号が対象か_イ) {
        否決理由 = `令第21条の${判定結果_令21.根拠リスト.join(',')}号に該当するため、イ号の対象外です。`;
    } else {
        let 面積条件クリア_イ = (建物情報.延べ面積 < 300); // 簡易判定（全体/部分を問わず延べ面積で見る）
        if (面積条件クリア_イ) {
            設置可能フラグ = true;
            判定根拠号 = "イ号";
        } else {
            否決理由 = `延べ面積(${建物情報.延べ面積}㎡)が300㎡以上のため、イ号の対象外です。`;
        }
    }

    // === ロ号の判定 ===
    if (!設置可能フラグ) {
        if (建物情報.主用途 !== "(16)項イ") {
            否決理由 = "用途が(16)項イでないため、ロ号の対象外です。";
        } else {
            let 条件クリア_ロ = true;
            let 理由_ロ = "";

            // --- STEP 1: 用途構成のチェック ---
            
            // --- リスト定義 ---
            // ロ号の(1)～(5)で名指しされている、中心的な用途リスト
            const 許可用途リスト_ロ_本体 = [
                "(2)項イ", "(2)項ロ", "(2)項ハ", "(5)項イ", "(6)項イ", "(6)項ロ", "(6)項ハ", 
                "(9)項イ", "(3)項イ", "(3)項ロ", "駐車場"
            ];
            // 規則「ヘ」で面積上限1000㎡未満の用途リスト
            const 規則ヘ_面積1000未満リスト = ["(11)項", "(15)項"];
            // 規則「ヘ」で面積上限500㎡未満の用途リスト
            const 規則ヘ_面積500未満リスト = [
                "(1)項イ", "(1)項ロ", "(2)項イ", "(2)項ロ", "(2)項ハ", "(3)項イ", "(3)項ロ", 
                "(4)項", "(5)項ロ", "(6)項ニ", "(7)項", "(8)項", 
                "(9)項ロ", "(10)項", "(12)項イ", "(12)項ロ", "(13)項イ", "(14)項"
            ];

            // --- ループによる各用途のチェック ---
            for (const item of 建物情報.複合用途リスト) {
                let isItemAllowed = false; // この用途項目が許容されるかどうかのフラグ

                // --- チェックA: ロ号本体のリストに含まれるか？ ---
                if (許可用途リスト_ロ_本体.includes(item.用途)) {
                    // (6)項ハの宿泊条件
                    if (item.用途 === "(6)項ハ" && !item.入居宿泊フラグ) {
                        理由_ロ = "(6)項ハ部分が宿泊を伴わないため";
                    } 
                    // (9)項イの面積条件
                    else if (item.用途 === "(9)項イ" && item.面積 < 200) {
                        理由_ロ = "(9)項イ部分の面積が200㎡未満のため";
                    }
                    // ※(2)項,(3)項,(駐車場)の階・面積条件は、令21条判定結果から導かれるべきだが、
                    //   ここでは用途構成チェックとして許容する（厳密化は今後の課題）
                    else {
                        isItemAllowed = true;
                    }
                }
                
                // --- チェックB: 規則「ヘ」のリストに含まれるか？ (チェックAがNGの場合) ---
                if (!isItemAllowed) {
                    if (規則ヘ_面積1000未満リスト.includes(item.用途) && item.面積 < 1000) {
                        isItemAllowed = true;
                    }
                    else if (規則ヘ_面積500未満リスト.includes(item.用途) && item.面積 < 500) {
                        isItemAllowed = true;
                    }
                    // どのリストにも該当しない、または面積オーバーの場合
                    else {
                        理由_ロ = `構成用途に許容されない「${item.用途}」（面積: ${item.面積}㎡）が含まれるため`;
                    }
                }
                
                // この項目が最終的に許容されなかった場合、ループを抜けて判定終了
                if (!isItemAllowed) {
                    条件クリア_ロ = false;
                    break;
                }
            }

            // --- STEP 2: その他の要件のチェック (用途構成がOKだった場合のみ) ---
            if (条件クリア_ロ) {
                // 延べ面積300㎡以上の場合の追加条件
                if (建物情報.延べ面積 >= 300) {
                    // (a) 小規模特定用途複合防火対象物であること
                    if (!建物情報.is小規模特複フラグ) {
                        条件クリア_ロ = false;
                        理由_ロ = "「小規模特定用途複合防火対象物」に該当しないため";
                    } 
                    // (b) 令21条の特定号に該当しないこと
                    else {
                        const 除外号リスト_ロ = ["7号", "8号", "5号", "11号", "12号", "14号", "15号"];
                        const 該当除外号 = 判定結果_令21.根拠リスト.find(号 => 除外号リスト_ロ.includes(号));
                        if (該当除外号) {
                            条件クリア_ロ = false;
                            理由_ロ = `令第21条の${該当除外号}号に該当するため`;
                        }
                    }
                }
            }
            
            // --- 最終判定 ---
            if (条件クリア_ロ) {
                設置可能フラグ = true;
                判定根拠号 = "ロ号";
            } else {
                // 否決理由が空の場合は、一般的なメッセージを入れる
                if (!理由_ロ) { 理由_ロ = "ロ号の要件を満たしません"; }
                否決理由 = `${理由_ロ}、ロ号の対象外です。`;
            }
        }
    }

    // === ハ号の判定 ===
    if (!設置可能フラグ) {
        if (建物情報.主用途 !== "(16)項イ") {
            否決理由 = "用途が(16)項イでないため、ハ号の対象外です。";
        } else {
            let 条件クリア_ハ = true;
            let 理由_ハ = "";

            const 許可用途リスト_ハ = ["(5)項イ", "(5)項ロ"];
            if (!建物情報.複合用途リスト.every(item => 許可用途リスト_ハ.includes(item.用途))) {
                条件クリア_ハ = false; 理由_ハ = "構成用途が(5)項イ・ロ以外を含むため";
            } else {
                const item_5イ = 建物情報.複合用途リスト.find(item => item.用途 === "(5)項イ");
                if (item_5イ && item_5イ.面積 >= 300) {
                    条件クリア_ハ = false; 理由_ハ = `(5)項イ部分の面積(${item_5イ.面積}㎡)が300㎡以上のため`;
                }
            }
            if (条件クリア_ハ && !(建物情報.延べ面積 >= 300 && 建物情報.延べ面積 < 500)) {
                条件クリア_ハ = false; 理由_ハ = `延べ面積(${建物情報.延べ面積}㎡)が300～500㎡の範囲外のため`;
            }
            
            if (条件クリア_ハ) {
                設置可能フラグ = true;
                判定根拠号 = "ハ号";
            } else {
                否決理由 = `${理由_ハ}、ハ号の対象外です。`;
            }
        }
    }

    // === 最終結果の返却 ===
    if (設置可能フラグ) {
        return { 設置可否: "設置可能", 根拠: `特定小規模施設に関する省令 第2条第1号【${判定根拠号}】に該当します。`, 該当号: 判定根拠号 };
    } else {
        return { 設置可否: "設置不可", 根拠: 否決理由 || "特定小規模施設のいずれの要件にも該当しませんでした。", 該当号: null };
    }
}

/**
 * 入力値の妥当性をチェックする関数
 * @param {object} 建物情報 - チェック対象の建物情報オブジェクト
 * @returns {object} バリデーション結果 { isValid: boolean, errors: string[] }
 */
function validateBuildingInfo(建物情報) {
    const errors = [];
    
    // 必須項目のチェック
    if (!建物情報.主用途) {
        errors.push("主用途を選択してください。");
    }
    
    if (!建物情報.延べ面積 || 建物情報.延べ面積 <= 0) {
        errors.push("延べ面積は0より大きい値を入力してください。");
    }
    
    if (!建物情報.地上階数 || 建物情報.地上階数 <= 0) {
        errors.push("地上階数は1以上の値を入力してください。");
    }
    
    if (建物情報.地下階数 < 0) {
        errors.push("地下階数は0以上の値を入力してください。");
    }
    
    if (建物情報.指定可燃物倍数 < 0) {
        errors.push("指定可燃物倍数は0以上の値を入力してください。");
    }
    
    // 複合用途のチェック
    if (建物情報.主用途 === "(16)項イ" || 建物情報.主用途 === "(16)項ロ" || 建物情報.主用途 === "(16の二)項") {
        if (!建物情報.複合用途リスト || 建物情報.複合用途リスト.length === 0) {
            errors.push("複合用途防火対象物の場合、構成用途を1つ以上追加してください。");
        } else {
            for (let i = 0; i < 建物情報.複合用途リスト.length; i++) {
                const item = 建物情報.複合用途リスト[i];
                if (!item.用途) {
                    errors.push(`構成用途${i + 1}の用途を選択してください。`);
                }
                if (!item.面積 || item.面積 <= 0) {
                    errors.push(`構成用途${i + 1}の面積は0より大きい値を入力してください。`);
                }
            }
        }
    }
    
    // 階情報のチェック
    if (建物情報.階情報リスト && 建物情報.階情報リスト.length > 0) {
        for (let i = 0; i < 建物情報.階情報リスト.length; i++) {
            const 階 = 建物情報.階情報リスト[i];
            if (階.床面積 < 0) {
                errors.push(`${階.階名}の床面積は0以上の値を入力してください。`);
            }
        }
    }
    
    return {
        isValid: errors.length === 0,
        errors: errors
    };
}

/**
 * 判定結果を分かりやすい日本語で説明する関数
 * @param {object} 判定結果_令21 - 令第21条の判定結果
 * @param {object} 特小判定結果 - 特小自火報の判定結果
 * @param {object} 建物情報 - 建物情報
 * @returns {string} 説明文
 */
function generateResultDescription(判定結果_令21, 特小判定結果, 建物情報) {
    let description = "";
    
    // 令第21条の判定結果説明
    if (判定結果_令21.根拠リスト.length === 0) {
        description += "この建物は消防法施行令第21条による自動火災報知設備の設置義務がありません。\n\n";
    } else {
        console.log('結果表示: is設置範囲限定フラグ=', 判定結果_令21.is設置範囲限定フラグ);
        
        // 設置範囲限定の特例に該当する場合の特別表示
        if (判定結果_令21.is設置範囲限定フラグ) {
            console.log('設置範囲限定の特例表示を適用します');
            description += "この建物は消防法施行令第21条第1項第3号により自動火災報知設備の設置義務があります。\n";
            description += "ただし、省令第23条第４項第１号ヘの規定により、みなし従属不可用途以外の部分には設置を要しません。\n\n";
        } 
        // 通常の判定結果表示
        else {
            console.log('通常の判定結果表示を適用します');
            description += "この建物は消防法施行令第21条により自動火災報知設備の設置義務があります。\n";
            description += `該当する号: ${判定結果_令21.根拠リスト.join(", ")}\n\n`;
            
            if (判定結果_令21.全体義務) {
                description += `建物全体に設置義務があります（${判定結果_令21.全体義務}）。\n`;
            }
            
            if (判定結果_令21.部分義務リスト.length > 0) {
                description += "以下の部分に設置義務があります：\n";
                for (const item of 判定結果_令21.部分義務リスト) {
                    description += `- ${item.対象}（${item.号}）\n`;
                }
            }
            description += "\n";
        }
    }
    
    // 特小自火報の判定結果説明
    if (特小判定結果.設置可否 === "判定対象外") {
        description += "特定小規模施設用自動火災報知設備は判定対象外です。";
    } else if (特小判定結果.設置可否 === "設置可能") {
        description += `特定小規模施設用自動火災報知設備の設置が可能です。\n`;
        description += `根拠: ${特小判定結果.根拠}`;
    } else {
        description += `特定小規模施設用自動火災報知設備の設置はできません。\n`;
        description += `理由: ${特小判定結果.根拠}`;
    }
    
    return description;
}